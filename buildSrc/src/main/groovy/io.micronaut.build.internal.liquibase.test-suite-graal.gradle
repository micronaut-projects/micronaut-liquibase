plugins {
    id("io.micronaut.application")
    id("io.micronaut.test-resources")
}

micronaut {
    importMicronautPlatform = false
    runtime("netty")
    testRuntime("junit5")
    testResources {
        version = libs.versions.micronaut.testresources.get()
    }
    processing {
        incremental(false)
        annotations("micronaut.example.*")
    }
}

dependencies {
    runtimeOnly(mnLogging.logback.classic)
    implementation(projects.micronautLiquibase)
    implementation(project(":test-suite-graal"))
    annotationProcessor(mnData.micronaut.data.processor)
    implementation(mnData.micronaut.data.jdbc)

    testAnnotationProcessor(mnData.micronaut.data.processor)
    testImplementation(mn.micronaut.http.server.netty)
    testImplementation(mn.micronaut.http.client)
    testImplementation(mn.micronaut.jackson.databind)
    testImplementation(mnTest.micronaut.test.junit5)
    testImplementation("org.skyscreamer:jsonassert:1.5.1")
}

configurations.all {
    resolutionStrategy {
        preferProjectModules()
    }
}

application {
    mainClass = "micronaut.example.Application"
}

graalvmNative {
    toolchainDetection = false
    metadataRepository {
        enabled = true
    }
    binaries {
        all {
            resources.autodetect()
        }
    }
}
